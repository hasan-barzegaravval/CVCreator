CREATE TABLE IF NOT EXISTS headers(id INT AUTO_INCREMENT, Name VARCHAR(255) NOT NULL,Discription VARCHAR(255) NOT NULL,PRIMARY KEY (id));
CREATE TABLE IF NOT EXISTS infos(id INT AUTO_INCREMENT, Name VARCHAR(255) NOT NULL,Link VARCHAR(4000) NOT NULL,Value VARCHAR(255) NOT NULL,icon VARCHAR(255) NOT NULL,PRIMARY KEY (id));
CREATE TABLE IF NOT EXISTS profiles(id INT AUTO_INCREMENT, Age VARCHAR(255) NOT NULL,Photo VARCHAR(255) NOT NULL,MaterialStatus VARCHAR(255) NOT NULL,Profile VARCHAR(4000) NOT NULL,Comment VARCHAR(4000),PRIMARY KEY (id));
CREATE TABLE IF NOT EXISTS educations(id INT AUTO_INCREMENT,Degree VARCHAR(255) NOT NULL,Institue VARCHAR(255) NOT NULL,Link VARCHAR(4000),
                    StartDate VARCHAR(255) NOT NULL,EndDate VARCHAR(255) NOT NULL,Thesis VARCHAR(255) NOT NULL,CGPA VARCHAR(255) NOT NULL,Comment VARCHAR(4000),PRIMARY KEY (id));
CREATE TABLE IF NOT EXISTS projects(id INT AUTO_INCREMENT,Title VARCHAR(255) NOT NULL,Link VARCHAR(4000),Comment VARCHAR(4000),PRIMARY KEY (id));
CREATE TABLE IF NOT EXISTS positions(id INT AUTO_INCREMENT,Position VARCHAR(255) NOT NULL,PRIMARY KEY(id));
CREATE TABLE IF NOT EXISTS companies(id INT AUTO_INCREMENT,Company VARCHAR(255) NOT NULL UNIQUE,Link VARCHAR(4000),StartDate VARCHAR(255)NOT NULL,EndDate VARCHAR(255)NOT NULL,PRIMARY KEY(id));
CREATE TABLE IF NOT EXISTS achievements(id INT AUTO_INCREMENT,Achievements VARCHAR(255) NOT NULL UNIQUE,PRIMARY KEY(id));
CREATE TABLE IF NOT EXISTS responsibilities(id INT AUTO_INCREMENT,Responsibilities VARCHAR(255) NOT NULL UNIQUE,PRIMARY KEY(id));
CREATE TABLE IF NOT EXISTS skills(id INT AUTO_INCREMENT,Skill VARCHAR(255) NOT NULL UNIQUE,Rate INT NOT NULL,PRIMARY KEY(id));
CREATE TABLE IF NOT EXISTS language(id INT AUTO_INCREMENT,Language VARCHAR(255) NOT NULL,Fluency VARCHAR(255) NOT NULL,Score VARCHAR(255),Test VARCHAR(255),Comment VARCHAR(4000),PRIMARY KEY(id));
CREATE TABLE IF NOT EXISTS reference(id INT AUTO_INCREMENT,Name VARCHAR(255) NOT NULL,Position VARCHAR(255) NOT NULL,Company VARCHAR(255) NOT NULL,Phone VARCHAR(255) NOT NULL,Email VARCHAR(255) NOT NULL,Comment VARCHAR(4000),PRIMARY KEY(id));
CREATE TABLE IF NOT EXISTS publications(id INT AUTO_INCREMENT,_Type VARCHAR(255) NOT NULL,Title1 VARCHAR(255) NOT NULL,Title2 VARCHAR(255),Authors VARCHAR(255) NOT NULL,Journal VARCHAR(255),Volume VARCHAR(255),_IS VARCHAR(255),SP VARCHAR(255),EP VARCHAR(255),SN VARCHAR(255),Year VARCHAR(255),PB VARCHAR(255),PRIMARY KEY(id));
CREATE TABLE IF NOT EXISTS cvs(id INT AUTO_INCREMENT,Name VARCHAR(255) NOT NULL,Header VARCHAR(255),Info VARCHAR(255),Profile VARCHAR(255),Educations VARCHAR(255),WorkExperiences VARCHAR(255),Languages VARCHAR(255),Skills VARCHAR(255),Reference VARCHAR(255),Publications VARCHAR(255),PRIMARY KEY(id));
CREATE PROCEDURE INSERTUNIQUE(IN val VARCHAR(255),IN Tbname VARCHAR(255),IN CNAME VARCHAR(255),OUT ids INTEGER)
BEGIN	
	SET @t1=CONCAT("SELECT id into @ids1 FROM ",Tbname," WHERE ",CNAME,"=?",";");  
    SET @val1=val;
    PREPARE st FROM @t1;
    EXECUTE st USING @val1; 
    SET ids=@ids1;
	IF isnull(@ids1) Then
		SET @t1=CONCAT("INSERT INTO ",Tbname,"(",CNAME,")"," VALUES(?)"); 
		PREPARE st FROM @t1;
		EXECUTE st USING @val1;
        SET ids=(SELECT last_insert_id());
	END IF;     
    DEALLOCATE PREPARE st;        
    SET @ids1=NULL;      
END